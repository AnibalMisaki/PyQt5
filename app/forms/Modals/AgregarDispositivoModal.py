from PyQt5 import QtCore, QtGui, QtWidgets
from classes import modal,Logica, variable, device
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QMessageBox
from resources import *
from .AgregarVariableModal import UIAgregarVariableModal
from ..Widgets.VariableWidget import UIVariableWidget
from .ImportarDispositivoModal import UIImportarDispositivoModal
from copy import copy

class UIAgregarDispositvoModal(modal): # To add or update and device

    def __init__(self,**kwargs):
        super(UIAgregarDispositvoModal,self).__init__(**kwargs)
        if not kwargs["Dispositivo"] is None:
            self.dispositivo = kwargs["Dispositivo"]
        else:
            self.dispositivo = device()
        self.IsEdit = kwargs["IsEdit"]
        self.__UIVariablesContainer = dict()
        
    def setupUI(self):
        AgregarDispositvoModal = self
        AgregarDispositvoModal.setObjectName("AgregarDispositvoModal")
        AgregarDispositvoModal.setWindowModality(QtCore.Qt.WindowModal)
        AgregarDispositvoModal.resize(560, 640)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(AgregarDispositvoModal.sizePolicy().hasHeightForWidth())
        AgregarDispositvoModal.setSizePolicy(sizePolicy)
        AgregarDispositvoModal.setMinimumSize(QtCore.QSize(560, 640))
        font = QtGui.QFont()
        font.setFamily("Noto Serif")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        AgregarDispositvoModal.setFont(font)
        AgregarDispositvoModal.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/source/img/if_16_1751363.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        AgregarDispositvoModal.setWindowIcon(icon)
        AgregarDispositvoModal.setStyleSheet("background-color: rgb(255, 255, 255);")
        AgregarDispositvoModal.setInputMethodHints(QtCore.Qt.ImhSensitiveData)
        self.verticalLayout = QtWidgets.QVBoxLayout(AgregarDispositvoModal)
        self.verticalLayout.setObjectName("verticalLayout")
        self.MainFrame = QtWidgets.QFrame(AgregarDispositvoModal)
        self.MainFrame.setMinimumSize(QtCore.QSize(360, 520))
        self.MainFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MainFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MainFrame.setObjectName("MainFrame")
        self.MainLayout = QtWidgets.QVBoxLayout(self.MainFrame)
        self.MainLayout.setContentsMargins(0, 0, 0, 20)
        self.MainLayout.setSpacing(0)
        self.MainLayout.setObjectName("MainLayout")
        self.TitleFrame = QtWidgets.QFrame(self.MainFrame)
        self.TitleFrame.setMinimumSize(QtCore.QSize(0, 111))
        self.TitleFrame.setMaximumSize(QtCore.QSize(16777215, 111))
        self.TitleFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.TitleFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.TitleFrame.setObjectName("TitleFrame")
        self.TitleLayout = QtWidgets.QGridLayout(self.TitleFrame)
        self.TitleLayout.setContentsMargins(0, 0, 0, 0)
        self.TitleLayout.setSpacing(0)
        self.TitleLayout.setObjectName("TitleLayout")
        self.lblUDB = QtWidgets.QLabel(self.TitleFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblUDB.sizePolicy().hasHeightForWidth())
        self.lblUDB.setSizePolicy(sizePolicy)
        self.lblUDB.setMinimumSize(QtCore.QSize(0, 116))
        self.lblUDB.setMaximumSize(QtCore.QSize(16777215, 116))
        self.lblUDB.setStyleSheet("background-color: rgb(65, 105, 225);\n"
"margin:0px;")
        self.lblUDB.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.lblUDB.setText("")
        self.lblUDB.setPixmap(QtGui.QPixmap(":/source/img/logo.png"))
        self.lblUDB.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblUDB.setObjectName("lblUDB")
        self.TitleLayout.addWidget(self.lblUDB, 0, 0, 1, 1)
        self.lblSCADA = QtWidgets.QLabel(self.TitleFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblSCADA.sizePolicy().hasHeightForWidth())
        self.lblSCADA.setSizePolicy(sizePolicy)
        self.lblSCADA.setMinimumSize(QtCore.QSize(250, 116))
        self.lblSCADA.setMaximumSize(QtCore.QSize(16777215, 116))
        font = QtGui.QFont()
        font.setPointSize(21)
        font.setBold(True)
        font.setWeight(75)
        self.lblSCADA.setFont(font)
        self.lblSCADA.setAutoFillBackground(False)
        self.lblSCADA.setStyleSheet("color: rgb(255, 255, 0);background-color: rgb(65, 105, 225);\n"
"margin:0px;")
        self.lblSCADA.setObjectName("lblSCADA")
        self.TitleLayout.addWidget(self.lblSCADA, 0, 2, 1, 1)
        self.ExitFrame = QtWidgets.QFrame(self.TitleFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ExitFrame.sizePolicy().hasHeightForWidth())
        self.ExitFrame.setSizePolicy(sizePolicy)
        self.ExitFrame.setMinimumSize(QtCore.QSize(0, 116))
        self.ExitFrame.setMaximumSize(QtCore.QSize(16777215, 116))
        self.ExitFrame.setStyleSheet("background-color: rgb(65, 105, 225);")
        self.ExitFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ExitFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.ExitFrame.setLineWidth(0)
        self.ExitFrame.setObjectName("ExitFrame")
        self.ExitLayout = QtWidgets.QGridLayout(self.ExitFrame)
        self.ExitLayout.setContentsMargins(0, 0, 0, 0)
        self.ExitLayout.setSpacing(0)
        self.ExitLayout.setObjectName("ExitLayout")
        self.btnExit = QtWidgets.QPushButton(self.ExitFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnExit.sizePolicy().hasHeightForWidth())
        self.btnExit.setSizePolicy(sizePolicy)
        self.btnExit.setMaximumSize(QtCore.QSize(32, 32))
        self.btnExit.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.btnExit.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/source/img/Cancelar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnExit.setIcon(icon1)
        self.btnExit.setIconSize(QtCore.QSize(24, 24))
        self.btnExit.setFlat(True)
        self.btnExit.setObjectName("btnExit")
        self.ExitLayout.addWidget(self.btnExit, 0, 1, 1, 1)
        self.lblIIE = QtWidgets.QLabel(self.ExitFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblIIE.sizePolicy().hasHeightForWidth())
        self.lblIIE.setSizePolicy(sizePolicy)
        self.lblIIE.setMaximumSize(QtCore.QSize(16777215, 116))
        self.lblIIE.setStyleSheet("background-color: rgb(65, 105, 225);\n"
"margin:0px;")
        self.lblIIE.setText("")
        self.lblIIE.setPixmap(QtGui.QPixmap(":/source/img/iiie.png"))
        self.lblIIE.setScaledContents(False)
        self.lblIIE.setAlignment(QtCore.Qt.AlignCenter)
        self.lblIIE.setObjectName("lblIIE")
        self.ExitLayout.addWidget(self.lblIIE, 0, 0, 2, 1)
        self.TitleLayout.addWidget(self.ExitFrame, 0, 3, 1, 1)
        self.MainLayout.addWidget(self.TitleFrame, 0, QtCore.Qt.AlignTop)
        self.lblTitle = QtWidgets.QLabel(self.MainFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblTitle.sizePolicy().hasHeightForWidth())
        self.lblTitle.setSizePolicy(sizePolicy)
        self.lblTitle.setMinimumSize(QtCore.QSize(0, 26))
        self.lblTitle.setMaximumSize(QtCore.QSize(16777215, 51))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lblTitle.setFont(font)
        self.lblTitle.setStyleSheet("margin-top:5px;")
        self.lblTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.lblTitle.setObjectName("lblTitle")
        self.MainLayout.addWidget(self.lblTitle, 0, QtCore.Qt.AlignTop)
        self.InformacionContent = QtWidgets.QGroupBox(self.MainFrame)
        self.InformacionContent.setMinimumSize(QtCore.QSize(0, 215))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.InformacionContent.setFont(font)
        self.InformacionContent.setStyleSheet("QGroupBox{margin-left:25px;margin-right:25px;}\n"
"QGroupBox::title{top:0;}")
        self.InformacionContent.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.InformacionContent.setFlat(False)
        self.InformacionContent.setObjectName("InformacionContent")
        self.lblImagen = QtWidgets.QLabel(self.InformacionContent)
        self.lblImagen.setGeometry(QtCore.QRect(40, 42, 171, 151))
        self.lblImagen.setText("")
        self.lblImagen.setPixmap(QtGui.QPixmap(":/source/img/NoImage.png"))
        self.lblImagen.setScaledContents(True)
        self.lblImagen.setObjectName("lblImagen")
        self.txtNombre = QtWidgets.QLineEdit(self.InformacionContent)
        self.txtNombre.setGeometry(QtCore.QRect(320, 60, 161, 21))
        self.txtNombre.setStyleSheet("border-bottom:1px solid black;border-top:none;")
        self.txtNombre.setObjectName("txtNombre")
        self.txtID = QtWidgets.QLineEdit(self.InformacionContent)
        self.txtID.setGeometry(QtCore.QRect(320, 90, 161, 21))
        self.txtID.setStyleSheet("border-bottom:1px solid black;border-top:none;")
        self.txtID.setObjectName("txtID")
        self.txtToken = QtWidgets.QLineEdit(self.InformacionContent)
        self.txtToken.setGeometry(QtCore.QRect(320, 120, 161, 21))
        self.txtToken.setStyleSheet("border-bottom:1px solid black;border-top:none;")
        self.txtToken.setObjectName("txtToken")
        self.txtTime = QtWidgets.QSpinBox(self.InformacionContent)
        self.txtTime.setGeometry(QtCore.QRect(320, 155, 45, 26))
        self.txtTime.setObjectName("txtTime")
        self.txtTime.setMinimum(1)
        self.txtTime.setValue(30)
        self.label = QtWidgets.QLabel(self.InformacionContent)
        self.label.setGeometry(QtCore.QRect(250, 63, 61, 20))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.InformacionContent)
        self.label_2.setGeometry(QtCore.QRect(250, 93, 54, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.InformacionContent)
        self.label_3.setGeometry(QtCore.QRect(250, 125, 54, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.InformacionContent)
        self.label_4.setGeometry(QtCore.QRect(250, 160, 54, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.btnAceptar = QtWidgets.QPushButton(self.InformacionContent)
        self.btnAceptar.setGeometry(QtCore.QRect(410, 3, 95, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnAceptar.sizePolicy().hasHeightForWidth())
        self.btnAceptar.setSizePolicy(sizePolicy)
        self.btnAceptar.setMinimumSize(QtCore.QSize(92, 38))
        self.btnAceptar.setMaximumSize(QtCore.QSize(128, 48))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnAceptar.setFont(font)
        self.btnAceptar.setStyleSheet("border:1px solid green;top:0px;")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/source/img/OK.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnAceptar.setIcon(icon2)
        self.btnAceptar.setIconSize(QtCore.QSize(24, 24))
        self.btnAceptar.setShortcut("")
        self.btnAceptar.setCheckable(False)
        self.btnAceptar.setFlat(True)
        self.btnAceptar.setObjectName("btnAceptar")
        self.btnImportar = QtWidgets.QPushButton(self.InformacionContent)
        self.btnImportar.setGeometry(QtCore.QRect(310, 3, 95, 40))
        self.btnImportar.setMinimumSize(QtCore.QSize(92, 38))
        self.btnImportar.setMaximumSize(QtCore.QSize(128, 48))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnImportar.setFont(font)
        self.btnImportar.setStyleSheet("border:1px solid green;")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/source/img/Importar-SM.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnImportar.setIcon(icon3)
        self.btnImportar.setIconSize(QtCore.QSize(24, 24))
        self.btnImportar.setShortcut("")
        self.btnImportar.setCheckable(False)
        self.btnImportar.setFlat(True)
        self.btnImportar.setObjectName("btnImportar")
        self.MainLayout.addWidget(self.InformacionContent)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.MainLayout.addItem(spacerItem)
        self.VariablesContent = QtWidgets.QGroupBox(self.MainFrame)
        self.VariablesContent.setMinimumSize(QtCore.QSize(0, 225))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.VariablesContent.setFont(font)
        self.VariablesContent.setStyleSheet("QGroupBox{margin-left:25px;margin-right:25px;}\n"
"QGroupBox::title{top:0;}")
        self.VariablesContent.setObjectName("VariablesContent")
        self.lblVariablesCount = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariablesCount.setGeometry(QtCore.QRect(300, 13, 101, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariablesCount.setFont(font)
        self.lblVariablesCount.setObjectName("lblVariablesCount")
        self.btnVariableAgregar = QtWidgets.QPushButton(self.VariablesContent)
        self.btnVariableAgregar.setGeometry(QtCore.QRect(410, 0, 95, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnVariableAgregar.sizePolicy().hasHeightForWidth())
        self.btnVariableAgregar.setSizePolicy(sizePolicy)
        self.btnVariableAgregar.setMinimumSize(QtCore.QSize(92, 38))
        self.btnVariableAgregar.setMaximumSize(QtCore.QSize(128, 48))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnVariableAgregar.setFont(font)
        self.btnVariableAgregar.setStyleSheet("border:1px solid green;top:0px;")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/source/img/Agregar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnVariableAgregar.setIcon(icon4)
        self.btnVariableAgregar.setIconSize(QtCore.QSize(24, 24))
        self.btnVariableAgregar.setShortcut("")
        self.btnVariableAgregar.setCheckable(False)
        self.btnVariableAgregar.setFlat(True)
        self.btnVariableAgregar.setObjectName("btnVariableAgregar")
        self.variablesScroll = QtWidgets.QScrollArea(self.VariablesContent)
        self.variablesScroll.setGeometry(QtCore.QRect(28, 70, 481, 151))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.variablesScroll.sizePolicy().hasHeightForWidth())
        self.variablesScroll.setSizePolicy(sizePolicy)
        self.variablesScroll.setMinimumSize(QtCore.QSize(481, 150))
        self.variablesScroll.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.variablesScroll.setLineWidth(0)
        self.variablesScroll.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.variablesScroll.setWidgetResizable(True)
        self.variablesScroll.setObjectName("variablesScroll")
        self.VariableScrollContent = QtWidgets.QWidget()
        self.VariableScrollContent.setGeometry(QtCore.QRect(0, 0, 481, 151))
        self.VariableScrollContent.setObjectName("VariableScrollContent")
        self.VariablesLayout = QtWidgets.QVBoxLayout(self.VariableScrollContent)
        self.VariablesLayout.setContentsMargins(5, 5, 9, -1)
        self.VariablesLayout.setObjectName("VariablesLayout")
        self.VariablesLayout.setAlignment(Qt.AlignTop)
        self.VariablesLayout.setSpacing(5)
        self.variablesScroll.setWidget(self.VariableScrollContent)
        self.lblVariableNombre = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariableNombre.setGeometry(QtCore.QRect(45, 45, 65, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariableNombre.setFont(font)
        self.lblVariableNombre.setObjectName("lblVariableNombre")
        self.lblVariablePIN = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariablePIN.setGeometry(QtCore.QRect(125, 45, 65, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariablePIN.setFont(font)
        self.lblVariablePIN.setObjectName("lblVariablePIN")
        self.lblVariableTipo = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariableTipo.setGeometry(QtCore.QRect(210, 45, 41, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariableTipo.setFont(font)
        self.lblVariableTipo.setObjectName("lblVariableTipo")
        self.lblVariableColor = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariableColor.setGeometry(QtCore.QRect(288, 45, 41, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariableColor.setFont(font)
        self.lblVariableColor.setObjectName("lblVariableColor")
        self.lblVariableSenal = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariableSenal.setGeometry(QtCore.QRect(363, 45, 51, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariableSenal.setFont(font)
        self.lblVariableSenal.setObjectName("lblVariableSenal")
        self.lblVariableAccion = QtWidgets.QLabel(self.VariablesContent)
        self.lblVariableAccion.setGeometry(QtCore.QRect(422, 45, 65, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblVariableAccion.setFont(font)
        self.lblVariableAccion.setObjectName("lblVariableAccion")
        self.MainLayout.addWidget(self.VariablesContent)
        self.verticalLayout.addWidget(self.MainFrame, 0, QtCore.Qt.AlignTop)

        self.retranslateUi(AgregarDispositvoModal)
        QtCore.QMetaObject.connectSlotsByName(AgregarDispositvoModal)
        self.center()
        # listener

        self.parent.signals.resize.connect(self.center)
        self.btnExit.clicked.connect(self.exit)
        self.lblImagen.mouseDoubleClickEvent =  self.actualizarImagen
        self.btnVariableAgregar.clicked.connect(self.agregarVariable)
        self.btnAceptar.clicked.connect(self.btnAceptar_Click)
        self.btnImportar.clicked.connect(self.btnImportar_Click) 

        if self.IsEdit:
            self.txtNombre.setText(self.dispositivo.nombre)
            self.txtID.setText(self.dispositivo.id)
            self.txtToken.setText(self.dispositivo.token)
            self.txtTime.setValue(self.dispositivo.time)
            self.lblImagen.setPixmap( Logica.byteArrayToImage(self.dispositivo.image) )
            self.btnImportar.hide()
            self.lblTitle.setText("Editar Dispositivo")
        
        self.shortcut = QtWidgets.QShortcut(Qt.Key_Return,self)
        self.shortcut.activated.connect(self.btnAceptar_Click)

        self.mostrarVariables()

    def mostrarVariables(self):
        self.lblVariablesCount.setText("Variables %s/12" % str(len(self.dispositivo.variables)))
        for v in self.dispositivo.variables:
            UIVariable = UIVariableWidget(v)
            self.VariablesLayout.addWidget(UIVariable,0,Qt.AlignTop)
            self.__UIVariablesContainer[v.unicID] = UIVariable
            UIVariable.signals.edit.connect(self.editarVariable)
            UIVariable.signals.delete.connect(self.eliminarVariable)

    def agregarVariable(self):
        if self.txtID.text() == "" or self.txtToken.text() == "":
           QMessageBox.warning(self,"¡Error!","Ingrese un ID y token para continuar")
           return
        if len(self.dispositivo.variables) == 12:
           QMessageBox.warning(self,"¡Error!","No puede agregar mas variables")
        UIAgregarVariable = UIAgregarVariableModal(**{"Parent":self.parent,"Variable":None,"IsEdit":False,"ID":self.txtID.text(),"Token":self.txtToken.text()})
        UIAgregarVariable.show()
        UIAgregarVariable.signals.success.connect(self.agregarVariable_Callback)

    def agregarVariable_Callback(self,var:variable):
        self.dispositivo.variables.append(var)
        UIVariable = UIVariableWidget(var)
        UIVariable.signals.edit.connect(self.editarVariable)
        UIVariable.signals.delete.connect(self.eliminarVariable)
        self.VariablesLayout.addWidget(UIVariable,0,Qt.AlignTop)
        self.__UIVariablesContainer[var.unicID] = UIVariable
        self.lblVariablesCount.setText("Variables %s/12" % str(len(self.dispositivo.variables)))
        
    def editarVariable(self,v:variable):
        if self.txtID.text() == "" or self.txtToken.text() == "":
           QMessageBox.warning(self,"¡Error!","Ingrese un ID y token para continuar")
           return
        UIVariable = UIAgregarVariableModal(**{"Parent":self.parent,"Variable":v,"IsEdit":True,"ID":self.txtID.text(),"Token":self.txtToken.text()})
        UIVariable.show()
        UIVariable.signals.success.connect(self.editarVariable_Callback)
        
    def editarVariable_Callback(self,v:variable):
        for var in self.dispositivo.variables:
            print(var)
        UIVariable = self.__UIVariablesContainer[v.unicID]
        UIVariable.updateUI(v) # if success then must update the UI to show the changes

    def eliminarVariable(self,v:variable):
        self.dispositivo.variables.remove(v)
        UIVariable:UIVariableWidget = self.__UIVariablesContainer[v.unicID]
        UIVariable.close()
        del self.__UIVariablesContainer[v.unicID]
        del v
        self.lblVariablesCount.setText("Variables %s/12" % str(len(self.dispositivo.variables)))
            
    def actualizarImagen(self,event):
        from PyQt5.QtCore import QByteArray, QFileInfo
        from PyQt5.QtWidgets import QFileDialog, QMessageBox
        fileName = QFileDialog.getOpenFileName(self,"Abrir",filter="Images (*.png *.jpg)")  # options=QtWidgets.QFileDialog.DontUseNativeDialog
        if all(fileName):
            info = QFileInfo(fileName[0])
            if info.size() > 32000:
                QMessageBox.warning(self,"¡Error!","No se permite archivos de mas de 32kb")
                return
            str_base64 = Logica.imageToByteArray(fileName[0])
            if str_base64 is None:
                QMessageBox.warning(self,"¡Error!","Fallo al cargar la imagen")
                return
            self.lblImagen.setPixmap( Logica.byteArrayToImage(str_base64) )
            self.dispositivo.image = str_base64

    def btnImportar_Click(self):
        UIImportar = UIImportarDispositivoModal(**{"Parent":self.parent})
        UIImportar.show()
        UIImportar.signals.success.connect(self.importarAction)

    def importarAction(self,d:device):
        self.txtNombre.setText("%s-Copia" % d.nombre)
        self.txtID.setText(d.id)
        self.txtToken.setText(d.token)
        self.txtTime.setValue(d.time)
        self.lblImagen.setPixmap( Logica.byteArrayToImage(d.image) )
        self.dispositivo.image = d.image

    def btnAceptar_Click(self):
        try:
            self.dispositivo.nombre = self.txtNombre.text()
            self.dispositivo.id = self.txtID.text()
            self.dispositivo.token = self.txtToken.text()
            self.dispositivo.time = self.txtTime.value()
        except ValueError as vError:
            QtWidgets.QMessageBox.warning(self,"¡Error!",vError.__str__())
            return
        response = self.prompt("Confirmacion","¿Son estos datos correctos?")
        if response == QtWidgets.QMessageBox.Yes:
            self.success(self.dispositivo)

    def disconnectSignals(self):
        self.parent.signals.resize.disconnect(self.center)
        self.btnExit.clicked.disconnect(self.exit)
        self.btnAceptar.clicked.disconnect(self.btnAceptar_Click)
        self.lblImagen.mouseDoubleClickEvent = None
        self.btnVariableAgregar.clicked.disconnect(self.agregarVariable)
        self.btnImportar.clicked.disconnect(self.btnImportar_Click)
        for UI in self.__UIVariablesContainer.items():
            UIVariable = UI[1]
            UIVariable.signals.edit.disconnect(self.editarVariable)
            UIVariable.signals.delete.disconnect(self.eliminarVariable)
            UIVariable.close()
        self.__UIVariablesContainer.clear()
        del self.dispositivo

    def retranslateUi(self, AgregarDispositvoModal):
        _translate = QtCore.QCoreApplication.translate
        AgregarDispositvoModal.setWindowTitle(_translate("AgregarDispositvoModal", "Sistema SCADA"))
        self.lblSCADA.setText(_translate("AgregarDispositvoModal", "SCADA"))
        self.lblTitle.setText(_translate("AgregarDispositvoModal", "Agregar Dispositivo"))
        self.InformacionContent.setTitle(_translate("AgregarDispositvoModal", "Información"))
        self.label.setText(_translate("AgregarDispositvoModal", "Nombre:"))
        self.label_2.setText(_translate("AgregarDispositvoModal", "ID:"))
        self.label_3.setText(_translate("AgregarDispositvoModal", "Token:"))
        self.label_4.setText(_translate("AgregarDispositvoModal", "Tiempo:"))
        self.btnAceptar.setText(_translate("AgregarDispositvoModal", "Aceptar"))
        self.btnImportar.setText(_translate("AgregarDispositvoModal", "Importar"))
        self.VariablesContent.setTitle(_translate("AgregarDispositvoModal", "Variables"))
        self.lblVariablesCount.setText(_translate("AgregarDispositvoModal", "Variables 0/12"))
        self.btnVariableAgregar.setText(_translate("AgregarDispositvoModal", "Agregar"))
        self.lblVariableNombre.setText(_translate("AgregarDispositvoModal", "Nombre:"))
        self.lblVariablePIN.setText(_translate("AgregarDispositvoModal", "Variable:"))
        self.lblVariableTipo.setText(_translate("AgregarDispositvoModal", "Tipo:"))
        self.lblVariableColor.setText(_translate("AgregarDispositvoModal", "Color:"))
        self.lblVariableSenal.setText(_translate("AgregarDispositvoModal", "Señal:"))
        self.lblVariableAccion.setText(_translate("AgregarDispositvoModal", "Acciones:"))
